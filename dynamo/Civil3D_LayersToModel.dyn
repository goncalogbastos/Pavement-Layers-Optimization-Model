{
  "Uuid": "5fcbd0f8-e4ec-4b1b-88c9-abc0703895e5",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Civil3D_LayersToModel",
  "ElementResolver": {
    "ResolutionMap": {
      "Rectangle": {
        "Key": "Autodesk.DesignScript.Geometry.Rectangle",
        "Value": "ProtoGeometry.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "2081997f441b45f0b1fca1d56ffd5eb0",
      "Inputs": [
        {
          "Id": "73110abe63594616a4f460a05bc2ccd7",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe80a2e4cf824ac287d725653b49bb38",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2afe4af78b7438db65885c7714117bf",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d762e4c1e45146fba69a574158656b53",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5603d6b0ac894a82bce6c2d4ac470efa",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"left\";\ntrue;\ntrue;",
      "Id": "1222662bf2644c7eb188801e97491db4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91c982f5ec644895b8f2f400c8b60b8d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "240adbe982244a6d95fbf384e0a5a5dc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa3ebb2ad70341e4a870118cd6ce7bc0",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\COBA\\CODING\\layerOptimizationModel\\layerCoordinates_left.xlsx",
      "InputValue": ".\\layerCoordinates_left.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "6a24a3757b6e43e18802cc8c9015b3f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7134133710ad4b62a64c8244cd9945f4",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9068471fe78f4db8b60c81cce6a8c0bc",
      "Inputs": [
        {
          "Id": "d00c73da9d3245eba78e17d786b0c7b8",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec0267c4f61b4514a72fc2b5d4698f97",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "9439fa1dfba342879f820c271175c001",
      "Inputs": [
        {
          "Id": "0a2bd59d453d4d60845a6cffcc31eeee",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac1af70d4ccd40a899b71f003fcff3bf",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "aa907669bd8546ccb7c30bd8c702ebfd",
      "Inputs": [
        {
          "Id": "27246efcbfad49f3a43e42285c7c7efd",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "059b4b7f8f9244f7a8715fe8ba9c43a4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "__author__ = 'Goncalo Bastos - bastos.g.goncalo@gmail.com'\r\n__copyright__ = '2022'\r\n__version__ = '1.0.0'\r\n\r\n##############################################################\r\n\r\n# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\n# Add Assemblies for AutoCAD and Civil3D\r\nclr.AddReference('AcMgd')\r\nclr.AddReference('AcCoreMgd')\r\nclr.AddReference('AcDbMgd')\r\nclr.AddReference('AecBaseMgd')\r\nclr.AddReference('AecPropDataMgd')\r\nclr.AddReference('AeccDbMgd')\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('AutoCADNodes')\r\nclr.AddReference('Civil3DNodes')   \r\nclr.AddReference('Autodesk.Civil3DToolkit')\r\nclr.AddReference('DSCoreNodes')\r\n\r\n# Import references from AutoCAD\r\nfrom Autodesk.AutoCAD.Runtime import *\r\nfrom Autodesk.AutoCAD.ApplicationServices import *\r\nfrom Autodesk.AutoCAD.EditorInput import *\r\nfrom Autodesk.AutoCAD.DatabaseServices import *\r\nfrom Autodesk.AutoCAD.Geometry import *\r\n\r\n# Import references from Civil3D\r\nfrom Autodesk.Civil.ApplicationServices import *\r\nfrom Autodesk.Civil.DatabaseServices import *\r\n\r\n# Import references from Dynamo\r\nimport Autodesk.AutoCAD.DynamoNodes as DA\r\nimport Autodesk.Civil.DynamoNodes as DC\r\nimport Autodesk.DesignScript.Geometry as DS\r\nimport DSCore\r\nfrom Autodesk.AutoCAD.DynamoNodes import *\r\nfrom Autodesk.Civil.DynamoNodes import *\r\n#from Autodesk.DesignScript.Geometry import *\r\nfrom DSCore import *\r\n\r\n\r\n##############################################################\r\n\r\nKMS = IN[0]\r\nCOORDINATES = IN[1]\r\n\r\nrects = []\r\nkms_ = []\r\n\r\nfor coordinate in COORDINATES:\r\n\r\n\tcoord_ = coordinate.replace(\"(\",\"\")\r\n\tcoord_ = coord_.replace(\")\",\"\")\t\r\n\tcoord_ = coord_.strip(\"][\").split(\", \")\t\r\n\tcoord_ = [float(i) for i in coord_]\r\n\t\r\n\r\n\tif len(coord_) == 1:\r\n\t\tpass\r\n\telse:\r\n\t\tc_iter = iter(coord_)\r\n\t\t\r\n\t\tfor x1,y1,x2,y2,x3,y3,x4,y4 in zip(c_iter,c_iter,c_iter,c_iter,c_iter,c_iter,c_iter,c_iter):\r\n\t\t\tp1_ = DS.Point.ByCoordinates(x1,y1,0)\r\n\t\t\tp2_ = DS.Point.ByCoordinates(x2,y2,0)\r\n\t\t\tp3_ = DS.Point.ByCoordinates(x3,y3,0)\r\n\t\t\tp4_ = DS.Point.ByCoordinates(x4,y4,0)\r\n\t\t\t\r\n\t\t\tp_km = DS.Point.ByCoordinates(0,y1,0)\r\n\r\n\t\t\ttry:\r\n\t\t\t\t#layer = DS.PolyCurve.ByPoints([p1_,p2_,p3_,p4_],False)\r\n\t\t\t\t#layer = DS.Polygon.ByPoints([p1_,p2_,p3_,p4_])\r\n\t\t\t\trects.append([p1_,p2_,p4_,p3_,p1_])\r\n\t\t\t\tkms_.append(p_km)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\t\r\n\r\n\t\t\t\t\t\r\n\r\n\r\nOUT = rects,kms_",
      "VariableInputPorts": true,
      "Id": "f69029c89bc3473c8cbf697e69b155c0",
      "Inputs": [
        {
          "Id": "ed72d01c5edc49859a81d09326edc7f8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d79c710121142f3bafa712fe5286eeb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d27f26d2a5a94e999b7a6aab792491e8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "565d349758cd41c7952fd411c3be9cbf",
      "Inputs": [
        {
          "Id": "a47c31dde6484583926a4a4d7f879b97",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd80bddc6f7e49e0bc6a9ba2049bc824",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Id": "b164ae1cc50f423da0bc0f3da6ccff2d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb84494792344c0795ad9e1108f3916b",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current AutoCAD document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.ModelSpace",
      "Id": "ca960d2d8da043d89136733052b05ce8",
      "Inputs": [
        {
          "Id": "04de9b6d06ec4bd08293b274ee92f790",
          "Name": "document",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6781ae4ad5e741168bcf980af0845ba2",
          "Name": "Block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the model space block table record.\n\nDocument.ModelSpace: Block"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"@AUX\";",
      "Id": "35cd97c5e53848a3a95cf845d460f550",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d554a4e8a9948f79567e28cde347f11",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "0a3cee6857e9411396bc3f79796a85b7",
      "Inputs": [
        {
          "Id": "c36778c824e34469bfffea59a9226473",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70d22d298c09445db60b59a3e05b1e2f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Polyline.ByPoints@Autodesk.DesignScript.Geometry.Point[],string,Autodesk.AutoCAD.DynamoNodes.Block",
      "Id": "a79cf64a58e94fffbe2b56a1b8ed1664",
      "Inputs": [
        {
          "Id": "0abd5616d8e14229b81f94755720fff9",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a2a3012a46646c6a69e40df25651ea6",
          "Name": "layer",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09577449c2684040b058d2aed5f0618e",
          "Name": "block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be226c786dff4736864e47f6c811ee85",
          "Name": "Polyline",
          "Description": "Polyline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create an AutoCAD polyline by a point list, using elevation from the first vertex.\n\nPolyline.ByPoints (points: Point[], layer: string, block: Block): Polyline"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "8ab70ab783d3476fb25e6b322a6f22db",
      "Inputs": [
        {
          "Id": "dd9d3adc37ad4b9597e82c94c063ca43",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdeb6a47c109495eb221451ccbed6d4c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.MText.Create@string,Autodesk.DesignScript.Geometry.Point,int,double,double,double,string,string,string,Autodesk.AutoCAD.DynamoNodes.Block",
      "Id": "65be6c26f9b14fe3ace819d26985c068",
      "Inputs": [
        {
          "Id": "66305008e879477ea7cfc841600920d3",
          "Name": "text",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4801ceba3dfc4e4daa98d968ca23c0bb",
          "Name": "insertionPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee968b2188d24077944a0fa35e428ec9",
          "Name": "columns",
          "Description": "int\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d09366971f649299aab6eb03e39bb6f",
          "Name": "width",
          "Description": "double\nDefault value : 0.2",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d77b2bacbab4bc492673ed6a077e99f",
          "Name": "height",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04fc44dbba1a4d6c8bde7e41d4c2524d",
          "Name": "columnGutterWidth",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6e936eb25f04452b6df3ba71a040379",
          "Name": "horizontalAttachment",
          "Description": "string\nDefault value : \"Left\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6465d2379f594b23a66971322f1b3aec",
          "Name": "verticalAttachment",
          "Description": "string\nDefault value : \"Top\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad54444842f44b46b906857769f242e4",
          "Name": "layer",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3e26a1c25034a37b907dc57289158b0",
          "Name": "block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bcefcf926a34e308d5492c09bf3241a",
          "Name": "MText",
          "Description": "MText",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create AutoCAD MText from a string of text.\n\nMText.Create (text: string, insertionPoint: Point, columns: int = 1, width: double = 0.2, height: double = 0, columnGutterWidth: double = 0, horizontalAttachment: string = \"Left\", verticalAttachment: string = \"Top\", layer: string, block: Block): MText"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "__author__ = 'Goncalo Bastos - bastos.g.goncalo@gmail.com'\r\n__copyright__ = '2022'\r\n__version__ = '1.0.0'\r\n\r\n##############################################################\r\n\r\n# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\n# Add Assemblies for AutoCAD and Civil3D\r\nclr.AddReference('AcMgd')\r\nclr.AddReference('AcCoreMgd')\r\nclr.AddReference('AcDbMgd')\r\nclr.AddReference('AecBaseMgd')\r\nclr.AddReference('AecPropDataMgd')\r\nclr.AddReference('AeccDbMgd')\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('AutoCADNodes')\r\nclr.AddReference('Civil3DNodes')   \r\nclr.AddReference('Autodesk.Civil3DToolkit')\r\nclr.AddReference('DSCoreNodes')\r\n\r\n# Import references from AutoCAD\r\nfrom Autodesk.AutoCAD.Runtime import *\r\nfrom Autodesk.AutoCAD.ApplicationServices import *\r\nfrom Autodesk.AutoCAD.EditorInput import *\r\nfrom Autodesk.AutoCAD.DatabaseServices import *\r\nfrom Autodesk.AutoCAD.Geometry import *\r\n\r\n# Import references from Civil3D\r\nfrom Autodesk.Civil.ApplicationServices import *\r\nfrom Autodesk.Civil.DatabaseServices import *\r\n\r\n# Import references from Dynamo\r\nimport Autodesk.AutoCAD.DynamoNodes as DA\r\nimport Autodesk.Civil.DynamoNodes as DC\r\nimport Autodesk.DesignScript.Geometry as DS\r\nimport DSCore\r\nfrom Autodesk.AutoCAD.DynamoNodes import *\r\nfrom Autodesk.Civil.DynamoNodes import *\r\n#from Autodesk.DesignScript.Geometry import *\r\nfrom DSCore import *\r\n\r\n\r\n##############################################################\r\n\r\nkms = IN[0]\r\n\r\nys = list(range(0,len(kms)))\r\nout_ = []\r\n\r\nfor i in ys:\r\n\tout_.append(DS.Point.ByCoordinates(0,i,0))\r\n\r\n\r\n\r\nOUT = out_",
      "VariableInputPorts": true,
      "Id": "58884e2322354aab8ee38c4e757216eb",
      "Inputs": [
        {
          "Id": "d1323a1f4ced4e869a1c6e34e3acc294",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdcaf56bdeda46c993a907546fc2eb17",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "5603d6b0ac894a82bce6c2d4ac470efa",
      "End": "0a2bd59d453d4d60845a6cffcc31eeee",
      "Id": "f06b6a6d05804beca59e7f6db0daaf91"
    },
    {
      "Start": "91c982f5ec644895b8f2f400c8b60b8d",
      "End": "fe80a2e4cf824ac287d725653b49bb38",
      "Id": "d4b62156b7b24ddea78136b5bfa3932b"
    },
    {
      "Start": "240adbe982244a6d95fbf384e0a5a5dc",
      "End": "d2afe4af78b7438db65885c7714117bf",
      "Id": "e05814ccd91449228c9c0d39ed5e69e0"
    },
    {
      "Start": "aa3ebb2ad70341e4a870118cd6ce7bc0",
      "End": "d762e4c1e45146fba69a574158656b53",
      "Id": "6b5ec6d08d6d4d3e9f627431815fbabe"
    },
    {
      "Start": "7134133710ad4b62a64c8244cd9945f4",
      "End": "d00c73da9d3245eba78e17d786b0c7b8",
      "Id": "a1299b6bc49d49cc89a8d64d735e00e3"
    },
    {
      "Start": "ec0267c4f61b4514a72fc2b5d4698f97",
      "End": "73110abe63594616a4f460a05bc2ccd7",
      "Id": "b7986fb9c75b41b68a8946d0a75265bd"
    },
    {
      "Start": "ac1af70d4ccd40a899b71f003fcff3bf",
      "End": "27246efcbfad49f3a43e42285c7c7efd",
      "Id": "beca8653877d4a5689a835725abbcdf7"
    },
    {
      "Start": "ac1af70d4ccd40a899b71f003fcff3bf",
      "End": "a47c31dde6484583926a4a4d7f879b97",
      "Id": "6d24e202b3354a6e900bf21ff8d232bc"
    },
    {
      "Start": "059b4b7f8f9244f7a8715fe8ba9c43a4",
      "End": "ed72d01c5edc49859a81d09326edc7f8",
      "Id": "e1774a47c8f9442a92ea35c7362964c3"
    },
    {
      "Start": "059b4b7f8f9244f7a8715fe8ba9c43a4",
      "End": "66305008e879477ea7cfc841600920d3",
      "Id": "3d2c017cc9ad4ddabd37dd32215cce99"
    },
    {
      "Start": "059b4b7f8f9244f7a8715fe8ba9c43a4",
      "End": "d1323a1f4ced4e869a1c6e34e3acc294",
      "Id": "0c3c18d2e4184cfba6286636a9ec25a9"
    },
    {
      "Start": "d27f26d2a5a94e999b7a6aab792491e8",
      "End": "c36778c824e34469bfffea59a9226473",
      "Id": "d96a5ac89aea4989a36b548fb14fb924"
    },
    {
      "Start": "d27f26d2a5a94e999b7a6aab792491e8",
      "End": "dd9d3adc37ad4b9597e82c94c063ca43",
      "Id": "a9a0a89b1781473b894335cdeb052ac4"
    },
    {
      "Start": "fd80bddc6f7e49e0bc6a9ba2049bc824",
      "End": "6d79c710121142f3bafa712fe5286eeb",
      "Id": "ad28f4179f1446d2b4a6ffc194634b1b"
    },
    {
      "Start": "cb84494792344c0795ad9e1108f3916b",
      "End": "04de9b6d06ec4bd08293b274ee92f790",
      "Id": "048cdd7763c547ed85292b82cb8ea242"
    },
    {
      "Start": "6781ae4ad5e741168bcf980af0845ba2",
      "End": "09577449c2684040b058d2aed5f0618e",
      "Id": "35997997146642018bb50d8a3d69a0d0"
    },
    {
      "Start": "6781ae4ad5e741168bcf980af0845ba2",
      "End": "b3e26a1c25034a37b907dc57289158b0",
      "Id": "03edbe0247d547d5a96375728f34135a"
    },
    {
      "Start": "4d554a4e8a9948f79567e28cde347f11",
      "End": "4a2a3012a46646c6a69e40df25651ea6",
      "Id": "4ca2bd77319b444b9960a5a19cabc9d8"
    },
    {
      "Start": "4d554a4e8a9948f79567e28cde347f11",
      "End": "ad54444842f44b46b906857769f242e4",
      "Id": "c05841bdce514c7a8b294d9238b1e7d7"
    },
    {
      "Start": "70d22d298c09445db60b59a3e05b1e2f",
      "End": "0abd5616d8e14229b81f94755720fff9",
      "Id": "79a425df59b44fab9fe7410036b7662b"
    },
    {
      "Start": "bdcaf56bdeda46c993a907546fc2eb17",
      "End": "4801ceba3dfc4e4daa98d968ca23c0bb",
      "Id": "799d6b94db784a958f8619e4aa6f6803"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "a79cf64a-58e9-4fff-be2b-56a1b8ed1664",
      "Binding": {
        "ByPoints_InClassDecl-1_InFunctionScope-1_Instance0_a79cf64a-58e9-4fff-be2b-56a1b8ed1664": ""
      }
    },
    {
      "NodeId": "65be6c26-f9b1-4fe3-ace8-19d26985c068",
      "Binding": {
        "Create_InClassDecl-1_InFunctionScope-1_Instance0_65be6c26-f9b1-4fe3-ace8-19d26985c068": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.2.7915",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -350.58422351348423,
      "EyeY": 373.8163246960147,
      "EyeZ": 1339.3659175064388,
      "LookX": 345.06122279632115,
      "LookY": -373.8163246960147,
      "LookZ": -1667.79591018222,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "2081997f441b45f0b1fca1d56ffd5eb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 711.0,
        "Y": 201.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1222662bf2644c7eb188801e97491db4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 486.0,
        "Y": 272.0
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "6a24a3757b6e43e18802cc8c9015b3f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 154.04307275651203,
        "Y": 143.98109765409214
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "9068471fe78f4db8b60c81cce6a8c0bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 496.5,
        "Y": 146.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "9439fa1dfba342879f820c271175c001",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1195.5047881011958,
        "Y": 108.56766633947569
      },
      {
        "ShowGeometry": true,
        "Name": "KMS",
        "Id": "aa907669bd8546ccb7c30bd8c702ebfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1724.2334961637309,
        "Y": 26.203044793920071
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f69029c89bc3473c8cbf697e69b155c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2030.8007658663269,
        "Y": 181.73676966522481
      },
      {
        "ShowGeometry": true,
        "Name": "COORDINATES",
        "Id": "565d349758cd41c7952fd411c3be9cbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1765.2104620582511,
        "Y": 325.95420852337281
      },
      {
        "ShowGeometry": true,
        "Name": "Document.Current",
        "Id": "b164ae1cc50f423da0bc0f3da6ccff2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2232.1135254943633,
        "Y": 605.67533779835776
      },
      {
        "ShowGeometry": true,
        "Name": "Document.ModelSpace",
        "Id": "ca960d2d8da043d89136733052b05ce8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2412.5451481204491,
        "Y": 589.31514256333128
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "35cd97c5e53848a3a95cf845d460f550",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2541.448870054935,
        "Y": 250.27143913761597
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0a3cee6857e9411396bc3f79796a85b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2366.2621216306438,
        "Y": 336.059597195234
      },
      {
        "ShowGeometry": true,
        "Name": "Polyline.ByPoints",
        "Id": "a79cf64a58e94fffbe2b56a1b8ed1664",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2921.4891498816428,
        "Y": 480.52572414158192
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8ab70ab783d3476fb25e6b322a6f22db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2359.1906580105569,
        "Y": 136.69267992652576
      },
      {
        "ShowGeometry": true,
        "Name": "MText.Create",
        "Id": "65be6c26f9b14fe3ace819d26985c068",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2984.5819794625795,
        "Y": -169.57175746124807
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "58884e2322354aab8ee38c4e757216eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2005.5701031095782,
        "Y": -366.96930369736486
      }
    ],
    "Annotations": [],
    "X": 73.0432053533695,
    "Y": 392.77234461357659,
    "Zoom": 0.31875125352879419
  }
}